/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mscapplication.main;

import java.awt.event.ActionListener;
import java.util.HashMap;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Andrew
 */
public class MainView extends javax.swing.JPanel {
    private DefaultTableModel model;

    /**
     * Creates new form MainView
     */
    public MainView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        keyTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        loadKeyFromFileButton = new javax.swing.JButton();
        saveKeyToTextFileButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        IVTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        hybridRulesTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        numberOfFeistalRoundsTextField = new javax.swing.JTextField();
        IVLengthTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        ruleKeyTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        blockSizeTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        siteSpacingTextField = new javax.swing.JTextField();
        timeSpacingTextField = new javax.swing.JTextField();
        nullBoundaryRadioButton = new javax.swing.JRadioButton();
        periodicBoundaryRadioButton = new javax.swing.JRadioButton();
        xorSiteSpacingCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        useExternalFilesCheckBox = new javax.swing.JCheckBox();
        CBCRadioButton = new javax.swing.JRadioButton();
        EBCRadioButton = new javax.swing.JRadioButton();
        useRoundKeyCheckBox = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        roundKeysTextArea = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        numberOfDataSetsTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setLayout(null);

        keyTextArea.setColumns(20);
        keyTextArea.setLineWrap(true);
        keyTextArea.setRows(5);
        jScrollPane3.setViewportView(keyTextArea);

        add(jScrollPane3);
        jScrollPane3.setBounds(20, 40, 540, 70);

        jLabel1.setText("Key (Hex)");
        add(jLabel1);
        jLabel1.setBounds(20, 20, 48, 14);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        loadKeyFromFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/miniToolbarIcons/Folder.png"))); // NOI18N
        loadKeyFromFileButton.setToolTipText("Load Key From File");
        loadKeyFromFileButton.setFocusable(false);
        loadKeyFromFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadKeyFromFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(loadKeyFromFileButton);

        saveKeyToTextFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/miniToolbarIcons/Disk.png"))); // NOI18N
        saveKeyToTextFileButton.setToolTipText("Save Key to File");
        saveKeyToTextFileButton.setFocusable(false);
        saveKeyToTextFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveKeyToTextFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(saveKeyToTextFileButton);

        add(jToolBar1);
        jToolBar1.setBounds(80, 10, 50, 30);

        IVTextArea.setColumns(20);
        IVTextArea.setLineWrap(true);
        IVTextArea.setRows(5);
        IVTextArea.setWrapStyleWord(true);
        jScrollPane4.setViewportView(IVTextArea);

        add(jScrollPane4);
        jScrollPane4.setBounds(20, 140, 540, 50);

        jLabel4.setText("IV");
        add(jLabel4);
        jLabel4.setBounds(20, 120, 10, 14);

        hybridRulesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Round", "Cell", "Rule"
            }
        ));
        jScrollPane5.setViewportView(hybridRulesTable);

        add(jScrollPane5);
        jScrollPane5.setBounds(580, 40, 190, 530);

        jLabel3.setText("CA Rules");
        add(jLabel3);
        jLabel3.setBounds(580, 20, 43, 14);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));
        jPanel1.setLayout(null);

        numberOfFeistalRoundsTextField.setText("16");
        numberOfFeistalRoundsTextField.setToolTipText("");
        numberOfFeistalRoundsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfFeistalRoundsTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(numberOfFeistalRoundsTextField);
        numberOfFeistalRoundsTextField.setBounds(240, 110, 44, 20);

        IVLengthTextField.setText("128");
        IVLengthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IVLengthTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(IVLengthTextField);
        IVLengthTextField.setBounds(240, 80, 44, 20);

        jLabel15.setText("Number of Feistal Rounds");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(20, 110, 123, 14);

        jLabel8.setText("IV Length (bits)");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 80, 74, 14);

        jLabel7.setText("Key Length (bits)");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 50, 82, 14);

        ruleKeyTextField.setText("512");
        jPanel1.add(ruleKeyTextField);
        ruleKeyTextField.setBounds(240, 50, 43, 20);

        jLabel5.setText("Block Size");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 20, 46, 14);

        blockSizeTextField.setText("128");
        blockSizeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockSizeTextFieldActionPerformed(evt);
            }
        });
        jPanel1.add(blockSizeTextField);
        blockSizeTextField.setBounds(240, 20, 43, 20);

        jLabel10.setText("Site-Spacing");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 170, 90, 14);

        jLabel11.setText("Time-Spacing");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 140, 80, 14);

        siteSpacingTextField.setText("1");
        jPanel1.add(siteSpacingTextField);
        siteSpacingTextField.setBounds(120, 170, 30, 20);

        timeSpacingTextField.setText("1");
        jPanel1.add(timeSpacingTextField);
        timeSpacingTextField.setBounds(120, 140, 30, 20);

        buttonGroup3.add(nullBoundaryRadioButton);
        nullBoundaryRadioButton.setText("Null Boundary");
        nullBoundaryRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nullBoundaryRadioButtonActionPerformed(evt);
            }
        });
        jPanel1.add(nullBoundaryRadioButton);
        nullBoundaryRadioButton.setBounds(180, 150, 91, 23);

        buttonGroup3.add(periodicBoundaryRadioButton);
        periodicBoundaryRadioButton.setSelected(true);
        periodicBoundaryRadioButton.setText("Periodic Boundary");
        jPanel1.add(periodicBoundaryRadioButton);
        periodicBoundaryRadioButton.setBounds(180, 130, 120, 23);

        xorSiteSpacingCheckBox.setText("xorSiteSpacing");
        xorSiteSpacingCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xorSiteSpacingCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(xorSiteSpacingCheckBox);
        xorSiteSpacingCheckBox.setBounds(180, 170, 120, 23);

        add(jPanel1);
        jPanel1.setBounds(780, 40, 310, 210);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Encryption Modes"));

        useExternalFilesCheckBox.setText("Use External Files");
        useExternalFilesCheckBox.setActionCommand("Read PT From FIle");

        buttonGroup1.add(CBCRadioButton);
        CBCRadioButton.setSelected(true);
        CBCRadioButton.setText("CBC");

        buttonGroup1.add(EBCRadioButton);
        EBCRadioButton.setText("EBC");

        useRoundKeyCheckBox.setSelected(true);
        useRoundKeyCheckBox.setText("Use Round Key");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CBCRadioButton)
                    .addComponent(EBCRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(useExternalFilesCheckBox)
                    .addComponent(useRoundKeyCheckBox))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(CBCRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EBCRadioButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(useExternalFilesCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(useRoundKeyCheckBox)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        add(jPanel2);
        jPanel2.setBounds(780, 250, 310, 70);

        roundKeysTextArea.setColumns(20);
        roundKeysTextArea.setLineWrap(true);
        roundKeysTextArea.setRows(5);
        jScrollPane1.setViewportView(roundKeysTextArea);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 220, 540, 350);

        jLabel9.setText("Round Keys");
        add(jLabel9);
        jLabel9.setBounds(20, 200, 80, 14);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Preparation"));

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setText("128-Bit Key Avalanche");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setText("Plaintext Avalanche");

        buttonGroup2.add(jRadioButton3);
        jRadioButton3.setText("Plaintext/Ciphertext Correlation");

        buttonGroup2.add(jRadioButton5);
        jRadioButton5.setText("Random Plaintext/Random 128-Bit Keys");

        buttonGroup2.add(jRadioButton6);
        jRadioButton6.setSelected(true);
        jRadioButton6.setText("Low Density Plaintext");

        buttonGroup2.add(jRadioButton8);
        jRadioButton8.setText("High Density Plaintext");

        numberOfDataSetsTextField.setText("10");

        jLabel2.setText("No. of Data Sets");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numberOfDataSetsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton5)
                            .addComponent(jRadioButton8)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton6)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addGap(0, 67, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(numberOfDataSetsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        add(jPanel3);
        jPanel3.setBounds(780, 330, 310, 240);

        jLabel6.setText("**Change with Caution\"\"");
        add(jLabel6);
        jLabel6.setBounds(860, 20, 120, 14);
    }// </editor-fold>//GEN-END:initComponents

    private void blockSizeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockSizeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blockSizeTextFieldActionPerformed

    private void IVLengthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IVLengthTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IVLengthTextFieldActionPerformed

    private void numberOfFeistalRoundsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfFeistalRoundsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfFeistalRoundsTextFieldActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void nullBoundaryRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nullBoundaryRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nullBoundaryRadioButtonActionPerformed

    private void xorSiteSpacingCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xorSiteSpacingCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xorSiteSpacingCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton CBCRadioButton;
    private javax.swing.JRadioButton EBCRadioButton;
    private javax.swing.JTextField IVLengthTextField;
    private javax.swing.JTextArea IVTextArea;
    private javax.swing.JTextField blockSizeTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JTable hybridRulesTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextArea keyTextArea;
    private javax.swing.JButton loadKeyFromFileButton;
    private javax.swing.JRadioButton nullBoundaryRadioButton;
    private javax.swing.JTextField numberOfDataSetsTextField;
    private javax.swing.JTextField numberOfFeistalRoundsTextField;
    private javax.swing.JRadioButton periodicBoundaryRadioButton;
    private javax.swing.JTextArea roundKeysTextArea;
    private javax.swing.JTextField ruleKeyTextField;
    private javax.swing.JButton saveKeyToTextFileButton;
    private javax.swing.JTextField siteSpacingTextField;
    private javax.swing.JTextField timeSpacingTextField;
    private javax.swing.JCheckBox useExternalFilesCheckBox;
    private javax.swing.JCheckBox useRoundKeyCheckBox;
    private javax.swing.JCheckBox xorSiteSpacingCheckBox;
    // End of variables declaration//GEN-END:variables


    public void addLoadKeyFromFileButtonActionListener(ActionListener listenerForLoadKeyFromFileButton){  
        loadKeyFromFileButton.addActionListener(listenerForLoadKeyFromFileButton);    
    }
    
    public void addSaveKeyToTextFileButtonActionListener(ActionListener listenerForSaveKeyToTextFileButton){  
        saveKeyToTextFileButton.addActionListener(listenerForSaveKeyToTextFileButton);    
    }

    //action listeners for text fields

    public void keyTextAreaDocumentListener(DocumentListener listenerForKeyTextArea){  
        keyTextArea.getDocument().addDocumentListener(listenerForKeyTextArea);    
    } 
    
 //getters and setters   
    
      public int getBlockSizeTextArea () {   
        return Integer.parseInt(blockSizeTextField.getText());
    }
    
    public void setBlockSizeTextArea (String textValue) {
        blockSizeTextField.setText(textValue);
    }
    
    public String getKeyTextArea () {   
        return keyTextArea.getText();
    }
    
    public void setKeyTextArea (String textValue) {
        keyTextArea.setText(textValue);
    }
    
    public void setRoundKeysTextArea (HashMap roundKeysHashMap) { 
        
        String roundKeyString = "";
        for (int i = 0; i < roundKeysHashMap.size(); i ++)
            
        {       
            String hashString = roundKeysHashMap.get(i).toString();
            roundKeyString = roundKeyString + "{" + hashString + "}," ;   
        }
        
        roundKeysTextArea.setText(roundKeyString); 
    }
    
     public String getIVTextArea () {   
        return IVTextArea.getText();
    }
    
    public void setIVTextArea (String textValue) {
        IVTextArea.setText(textValue);
    }
    
    public String getRuleKeyTextField () {
    
    return ruleKeyTextField.getText();
}
    
    public int getRuleKeyLength () {
    
    int ruleKeyLength = Integer.parseInt(ruleKeyTextField.getText());
    
    return ruleKeyLength;
}
    
    public int getIVLength () {
    
    int IVLength = Integer.parseInt(IVLengthTextField.getText());
    
    return IVLength;
}
    
    public int getTimeSpacing () {
        
    int timeSpacing = Integer.parseInt(timeSpacingTextField.getText());
    
    return timeSpacing;
        
    } 
    
    public int getSiteSpacing () {
        
    int siteSpacing = Integer.parseInt(siteSpacingTextField.getText());
    
    return siteSpacing;
        
    } 
    
    public int getNumberOfDataSetsTextField () {
        
    int siteSpacing = Integer.parseInt(numberOfDataSetsTextField.getText());
    
    return siteSpacing;
        
    } 
    
    public String getNumberOfFeistalRounds () {
    
    return numberOfFeistalRoundsTextField.getText();
}
    
    public void setCBCRadioButton (Boolean radioValue) {
    
    CBCRadioButton.setSelected(radioValue);
}
    
    public Boolean getCBCRadioButton () {
    
    return CBCRadioButton.isSelected();
}
    
    public Boolean getEBCRadioButton () {
    
    return EBCRadioButton.isSelected();
}
    
        public Boolean getNullBoundaryRadioButton () {
    
    return nullBoundaryRadioButton.isSelected();
}
    
    public Boolean getPeriodicBoundaryRadioButton () {
    
    return periodicBoundaryRadioButton.isSelected();
}
    
      public int getPeriodicBoundaryCondition () {
    
       int periodicBoundaryCondition;
       
       if (periodicBoundaryRadioButton.isSelected()) {
           
           periodicBoundaryCondition = 1;
       }
       else {
           
           periodicBoundaryCondition = 0;
       }
          
          
    return periodicBoundaryCondition;
}
    
  public Boolean getRoundKeyCheckBox () {
    
    return useRoundKeyCheckBox.isSelected();
}  
  
  public Boolean getXorSiteSpacingCheckBox () {
    
    return xorSiteSpacingCheckBox.isSelected();
}  
    
    

public void setEBCRadioButton (Boolean radioValue) {
    
    EBCRadioButton.setSelected(radioValue);
}

public void useExternalFilesCheckBoxActionListener(ActionListener listenerForUseExternalFilesCheckBox){  
    useExternalFilesCheckBox.addActionListener(listenerForUseExternalFilesCheckBox);    
} 

public Boolean getUseExternalFilesCheckBox () {
    
    return useExternalFilesCheckBox.isSelected();
}

public void setUseExternalFilesCheckBox (Boolean booleanValue) {
    
    useExternalFilesCheckBox.setSelected(booleanValue);
}

public void setHybridRulesTable(DefaultTableModel model) {
    
hybridRulesTable.setModel(model); 

}

public DefaultTableModel getHybridRulesTable(HashMap roundKeyDecimalRulesHashMap) {
    
    
//    HashMap DecimalRulesHashMap = applicationController.getRoundKeyDecimalRulesHashMap();
    
    model = new DefaultTableModel(0, 3);
    
    
    
    for (Integer i = 0; i < Integer.parseInt(this.getNumberOfFeistalRounds()); i++ ){
    
    //need to look at a better way to do this
    HashMap DecimalRulesRoundHashMap = (HashMap)roundKeyDecimalRulesHashMap.get(i);
    
        
    for (int j = 0; j < this.getBlockSizeTextArea()/2; j++) {
        
//        Integer key = DecimalRulesRoundHashMap.getKey();
//        Integer value = entry.getValue();
        
        model.addRow(new Object[] {i+1, j, DecimalRulesRoundHashMap.get(j)});
   
    }    
    
//    
//    for ( Map.Entry<Integer, Integer> entry : hybridRulesMap.entrySet()) {
//        
//    Integer key = entry.getKey();
//    Integer value = entry.getValue();
//    
//    
//    model.addRow(new Object[] {i+1, key, value});
//}
//    
  }
    String header[] = new String[] { "Round", "Cell", "Rule"};
    model.setColumnIdentifiers(header);
    return model;

    
}


}
