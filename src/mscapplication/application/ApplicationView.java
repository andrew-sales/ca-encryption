/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mscapplication.application;

import mscapplication.utils.NumberUtils;
import java.awt.event.ActionListener;
import java.util.Arrays;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andrsale
 */
public class ApplicationView extends javax.swing.JFrame {

    /**
     * Creates new form SplitPaneTest
     */

public ApplicationView() {
try {
  UIManager.setLookAndFeel(
  UIManager.getSystemLookAndFeelClassName());
    } 
catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException e) {
    }
initComponents();



}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        encryptionTypeButtonGroup = new javax.swing.ButtonGroup();
        jToolBar2 = new javax.swing.JToolBar();
        encryptButton = new javax.swing.JButton();
        decryptButton = new javax.swing.JButton();
        generateKeyButton = new javax.swing.JButton();
        resetApplicationButton = new javax.swing.JButton();
        jToolBar8 = new javax.swing.JToolBar();
        NISTTestsButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CA Encryption Test Software");
        setResizable(false);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        encryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/toolbarIcons/Lock.png"))); // NOI18N
        encryptButton.setToolTipText("Encrypt");
        encryptButton.setBorder(null);
        encryptButton.setFocusable(false);
        encryptButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        encryptButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        encryptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(encryptButton);

        decryptButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/toolbarIcons/Unlock.png"))); // NOI18N
        decryptButton.setToolTipText("Decrypt");
        decryptButton.setFocusable(false);
        decryptButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        decryptButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(decryptButton);

        generateKeyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/toolbarIcons/Key.png"))); // NOI18N
        generateKeyButton.setToolTipText("Generate Key");
        generateKeyButton.setFocusable(false);
        generateKeyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        generateKeyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(generateKeyButton);

        resetApplicationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/toolbarIcons/reset.png"))); // NOI18N
        resetApplicationButton.setToolTipText("Reset Encryption + Decryption");
        resetApplicationButton.setFocusable(false);
        resetApplicationButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        resetApplicationButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(resetApplicationButton);

        jToolBar8.setFloatable(false);
        jToolBar8.setRollover(true);

        NISTTestsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/toolbarIcons/NISTTest.png"))); // NOI18N
        NISTTestsButton.setToolTipText("Run NIST Test Suite");
        NISTTestsButton.setFocusable(false);
        NISTTestsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NISTTestsButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar8.add(NISTTestsButton);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1144, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 573, Short.MAX_VALUE)
        );

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.setName(""); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar8, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE))
            .addComponent(jTabbedPane1)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(70, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_encryptButtonActionPerformed

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton NISTTestsButton;
    private javax.swing.JButton decryptButton;
    private javax.swing.JButton encryptButton;
    private javax.swing.ButtonGroup encryptionTypeButtonGroup;
    private javax.swing.JButton generateKeyButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar8;
    private javax.swing.JButton resetApplicationButton;
    // End of variables declaration//GEN-END:variables

public void addEncryptionButtonActionListener(ActionListener listenerForEncryptButton){  
   encryptButton.addActionListener(listenerForEncryptButton);    
}

//public void addGenerateHybridRulesButtonActionListener(ActionListener listenerForGenerateHybridRulesButton){   
//   generateHybridRulesButton.addActionListener(listenerForGenerateHybridRulesButton);    
//}
        
 public void generateKeyButtonActionListener(ActionListener listenerForGenerateKeyButton){   
   generateKeyButton.addActionListener(listenerForGenerateKeyButton);    
}       
 
public void decryptButtonActionListener(ActionListener listenerForDecryptButton){  
   decryptButton.addActionListener(listenerForDecryptButton);    
} 

public void addRunNISTTestsButtonListener(ActionListener runNISTTestsButton){  
   NISTTestsButton.addActionListener(runNISTTestsButton);
}

public void addResetApplicationButtonActionListener(ActionListener listenerForResetApplicationButton){  
    resetApplicationButton.addActionListener(listenerForResetApplicationButton);    
} 

//methods for adding views to the main central tabbed pane
  
public void addTabToMainCentralTabbedPane(String tabLabel,JPanel tabPanel) {
    jTabbedPane1.addTab(tabLabel, tabPanel); 
}   
 
public void setEncryptButtonState (Boolean buttonState) {
    
    encryptButton.setEnabled(buttonState);   
}

public void setDecryptButtonState (Boolean buttonState) {
    
    decryptButton.setEnabled(buttonState);
    
}

public void setGenerateKeyButtonState (Boolean buttonState) {
    
    generateKeyButton.setEnabled(buttonState);
    
}

//public void setGenerateHybridRulesButtonState (Boolean buttonState) {
//    
//    generateHybridRulesButton.setEnabled(buttonState);
//    
//}

}